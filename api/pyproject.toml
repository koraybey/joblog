[tool.ruff]
target-version = "py310"
select = [
    "A",   # prevent using keywords that clobber python builtins
    "RUF", # the ruff developer's own rules
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D",   # pydocstyle
    "E",   # Error
    "F",   # pyflakes
    "I",   # isort
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    "PGH", # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q",   # flake8-quotes
    "S",   # bandit
    "SIM", # flake8-simplify
    "TRY", # tryceratops
    "UP",  # pyupgrade
    "W",   # Warning
    "YTT", # flake8-2020
]
exclude = ["__pycache__", "env", ".env", ".mypy_cache"]
ignore = [
    "D100", # Add missing docstrings before prod. 
    "D101", # Add missing docstrings before prod. 
    "D102", # Add missing docstrings before prod. 
    "D103", # Add missing docstrings before prod. 
    "S101", # What's wrong with defensive use of assert? 
    "D204"
]
line-length = 120

[tool.ruff.lint.per-file-ignores]
# These ignores are needed for the files that use lmql package so that queries are not linted.
"funcs/*" = ["F401", "D300", "D301", "D400", "D205", "Q001", "E501"]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["chr", "typer.Argument", "typer.Option"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.pep8-naming]
staticmethod-decorators = ["pydantic.validator", "pydantic.root_validator"]

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["huggingface_hub.*", "jsonref", "lmql", "markdownify.*"]
ignore_missing_imports = true